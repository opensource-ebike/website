"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7688],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),p=c(n),m=o,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(h,s(s({ref:t},u),{},{components:n})):r.createElement(h,s({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=p;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:o,s[1]=a;for(var c=2;c<i;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},2721:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return a},metadata:function(){return c},toc:function(){return d}});var r=n(3117),o=n(102),i=(n(7294),n(3905)),s=["components"],a={},l=void 0,c={unversionedId:"tsdz2/development/Development-Why-reducing-the-ADC-and-PWM-resolution-to-8-bits",id:"tsdz2/development/Development-Why-reducing-the-ADC-and-PWM-resolution-to-8-bits",title:"Development-Why-reducing-the-ADC-and-PWM-resolution-to-8-bits",description:"This notes were written on 2019.06.17 by Casainho.",source:"@site/docs/tsdz2/development/Development-Why-reducing-the-ADC-and-PWM-resolution-to-8-bits.md",sourceDirName:"tsdz2/development",slug:"/tsdz2/development/Development-Why-reducing-the-ADC-and-PWM-resolution-to-8-bits",permalink:"/docs/tsdz2/development/Development-Why-reducing-the-ADC-and-PWM-resolution-to-8-bits",draft:!1,editUrl:"https://github.com/opensource-ebike/site/tree/master/docs/tsdz2/development/Development-Why-reducing-the-ADC-and-PWM-resolution-to-8-bits.md",tags:[],version:"current",frontMatter:{},sidebar:"tsdz2Sidebar",previous:{title:"Original Protocol",permalink:"/docs/tsdz2/development/Communication-Protocol"},next:{title:"FOC-derivation",permalink:"/docs/tsdz2/development/FOC-derivation"}},u={},d=[],p={toc:d};function m(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This notes were written on 2019.06.17 by Casainho."),(0,i.kt)("p",null,'When I started this firmware, I had already developed a lot of it on the\nKT motor controllers OpenSource firmware. The TSDZ2 motor controller\nuses the same 8 bits 16MHz microcontroller STM8S105xx and so I just\nreused the most part of the code. The mainly big difference is the way\nthe \\"low resolution FOC\\" algorithm is implemented because KT motor\ncontrollers has a specific part of the hardware to do it and on TSDZ2 it\nwas to be done on a different way.'),(0,i.kt)("p",null,"The STM8S105xx PWM channels that are in use have 16 bits resolution but\nI decided to use only 8 bits. The ADC channels have the resolution of 10\nbits but I decided to use only 8 bits. The main advantages of using 8\nbits are:\\\n\\\n",(0,i.kt)("strong",{parentName:"p"},"1. Faster processing speed"),"\\\nThis microcontroller is very limited in terms of processing speed and to\nhandle FOC we need to do it fast as possible. Also, we would like to\nincrease the PWM frequency to make possible the motor to rotate faster\nwith higher voltage and for that, we need more processing speed."),(0,i.kt)("p",null,"If not using the 8 bits resolution, the variables would be of 16 bits\nand the processing time would increase to a factor like x5 ","-","- this\nwould mean that probably FOC could not be implemented or would be worst\nresulting in the motor having less torque and the battery range would be\nlower.\\\n\\\n",(0,i.kt)("strong",{parentName:"p"},"2. Low pass filter of analog signals"),"\\\nThis motor has wires with high peak currents and PWM high frequency,\nmeaning the electric signals should be noisy."),(0,i.kt)("p",null,"On the analog signals measured by the ADC, the first 2 bits of the 10\nbits are being discarded and this results in a fast way that filters the\nnoisy analog signals.\\\n\\\n\\'\\'\\'3. Reducing programming memory usage\\\nThis microcontroller has very low memory size and so we need to save it\nif we want to implement advanced features like FOC."),(0,i.kt)("p",null,"The operations with 16 bits would increase to a factor like x4 the\nprogramming memory usage comparing to the 8 bits.\\"))}m.isMDXComponent=!0}}]);