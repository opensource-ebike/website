"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[2490],{3905:function(e,t,n){n.d(t,{Zo:function(){return h},kt:function(){return u}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},h=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,h=l(e,["components","mdxType","originalType","parentName"]),c=p(n),u=o,f=c["".concat(s,".").concat(u)]||c[u]||m[u]||a;return n?r.createElement(f,i(i({ref:t},h),{},{components:n})):r.createElement(f,i({ref:t},h))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},5039:function(e,t,n){n.r(t),n.d(t,{assets:function(){return h},contentTitle:function(){return s},default:function(){return u},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return m}});var r=n(3117),o=n(102),a=(n(7294),n(3905)),i=["components"],l={},s=void 0,p={unversionedId:"tsdz2/flashing/Flash-the-firmware-on-TSDZ2",id:"tsdz2/flashing/Flash-the-firmware-on-TSDZ2",title:"Flash-the-firmware-on-TSDZ2",description:"\\\\TOC\\\\",source:"@site/docs/tsdz2/flashing/Flash-the-firmware-on-TSDZ2.md",sourceDirName:"tsdz2/flashing",slug:"/tsdz2/flashing/Flash-the-firmware-on-TSDZ2",permalink:"/docs/tsdz2/flashing/Flash-the-firmware-on-TSDZ2",draft:!1,editUrl:"https://github.com/OpenSourceEBike/OpenSourceEBike.github.io/tree/master/docs/tsdz2/flashing/Flash-the-firmware-on-TSDZ2.md",tags:[],version:"current",frontMatter:{},sidebar:"tsdz2Sidebar",previous:{title:"Flash-the-firmware-on-SW102",permalink:"/docs/tsdz2/flashing/Flash-the-firmware-on-SW102"},next:{title:"How-to-flash-the-Flexible-OpenSource-firmware-on-KT-LCD3",permalink:"/docs/tsdz2/flashing/How-to-flash-the-Flexible-OpenSource-firmware-on-KT-LCD3"}},h={},m=[{value:"To connect directly:",id:"to_connect_directly",level:2},{value:"To acquire and make a plug to connect:",id:"to_acquire_and_make_a_plug_to_connect",level:2},{value:"Flash firmware on Linux",id:"flash_firmware_on_linux",level:2},{value:"Installing stm8flash on linux",id:"installing_stm8flash_on_linux",level:3},{value:"Backup existing firmware",id:"backup_existing_firmware",level:3},{value:"Flash firmware",id:"flash_firmware",level:3},{value:"Restoring a backup",id:"restoring_a_backup",level:3},{value:"Troubleshooting",id:"troubleshooting",level:3},{value:"SWIM error 0x05",id:"swim_error_0x05",level:4},{value:"SWIM error 0x04",id:"swim_error_0x04",level:4}],c={toc:m};function u(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"_","_","TOC","_","_"),(0,a.kt)("h1",{id:"wire_the_stlinkv2_to_the_tsdz2_wheel_speed_sensor_cable"},"Wire the STLinkV2 to the TSDZ2 wheel speed sensor cable"),(0,a.kt)("p",null,"The microcontroller chip that need to be flashed with the firmware is\nthe STM8S105. The needed wires from the STLinkV2 are GND, 5V and SWIM,\nwhich are to be connected to pins on the plug for the wheel speed sensor\ncable."),(0,a.kt)("p",null,"You can either connect directly to those pins, or acquire and set up a\nplug to connect to that cable."),(0,a.kt)("p",null,"NOTE: the wires from the STLink should be short, like 10 centimeters, or\nyou will probably get errors while trying to flash. If you need a long\ncable, try to use an USB extension instead."),(0,a.kt)("h2",{id:"to_connect_directly"},"To connect directly:"),(0,a.kt)("p",null,"This is quite straightforward using female-ended jumper cables as are\ntypically supplied with the STMLink adapter. See ",(0,a.kt)("a",{parentName:"p",href:"https://youtu.be/S2SRKu6-Qyw"},"this Youtube\nvideo"),", but in summary"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Remove the black plastic ends from one end of the jumper leads by\nlifting the small retaining tab and gently slipping them off to\nleave the metal connector underneath"),(0,a.kt)("li",{parentName:"ol"},"put heatshrink over the metal ends to prevent shorts (not essential,\nbut wise)"),(0,a.kt)("li",{parentName:"ol"},"slightly enlarge the holes since the motor plug pins are a little\nthicker than male jumper lead ends, e.g. by inserting a male jumper\nrotated 45 degrees."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Disconnect your battery before connecting"),". At least some ST Link\nclones will be damaged otherwise and will then appear to work, but\nwill not connect."),(0,a.kt)("li",{parentName:"ol"},"Connect them in as follows with the flat of the cable plug at the\nbottom:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"GND to the bottom left pin"),(0,a.kt)("li",{parentName:"ol"},"SWIM to the bottom right pin"),(0,a.kt)("li",{parentName:"ol"},"5V to the top pin (note some users have found connecting to 3.3V\noutput pin from ST Link to work if 5V does not)"),(0,a.kt)("li",{parentName:"ol"},"SWIM_RST to bottom center pin (optional, can help in case\nflashing does not succeed)")))),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/TSDZ2_speed_Sensor_Pinout.jpg"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/TSDZ2_speed_Sensor_Pinout.jpg")),(0,a.kt)("h2",{id:"to_acquire_and_make_a_plug_to_connect"},"To acquire and make a plug to connect:"),(0,a.kt)("p",null,"You may wish to do this if you frequently flash your motor or dislike\nthe direct pin connection method above. Some options are:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"buy an extra speed sensor and cut the sensor from the cable and so\nyou will have a cable with a connector that you can use only for\nprogramming - be careful, it appears some speed sensors (eg with Y\nSplitter for light cables) do not have the wires connected required\nfor flashing"),(0,a.kt)("li",{parentName:"ol"},"buy a speed sensor extension cable (have not confirmed myself if all\nwires for flashing are present)"),(0,a.kt)("li",{parentName:"ol"},"cut the cable to wire the needed wires for flashing and keep the\nother wires intact - this will work perfectly and you can avoid to\nbuy the extra wheel speed sensor")),(0,a.kt)("p",null,"Here is the list of wires: The connections to STLinkV2 clone:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"purple wire connect to STLinkV2 RST pin (Potentially optional, did\nnot appear to be needed flashing from Windows)"),(0,a.kt)("li",{parentName:"ul"},"orange wire connect to STLinkV2 GND pin"),(0,a.kt)("li",{parentName:"ul"},"black wire connect to STLinkV2 SWIM pin"),(0,a.kt)("li",{parentName:"ul"},"brown wire connect to STLinkV2 VCC/5V pin (Optional - For those who\nwant to flash without a battery attached)")),(0,a.kt)("p",null,"Example of my wiring:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/STLinkV2_to_TSDZ2_motor_controller-01.png"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/STLinkV2_to_TSDZ2_motor_controller-01.png")),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/STLinkV2_to_TSDZ2_motor_controller-02.png"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/raw/master/STLinkV2_to_TSDZ2_motor_controller-02.png")),(0,a.kt)("h1",{id:"download_and_flash_the_firmware"},"Download and flash the firmware"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://www.st.com/en/development-tools/stvp-stm32.html"},"Download STVP for Windows\nhere"),". This\nsoftware is from the STM8S105 manufacture for flashing the firmware.\nNOTE: if you are on Linux or MAC, you can use other alternative\ntool. For instance, ",(0,a.kt)("a",{parentName:"li",href:"https://opensourceebikefirmware.bitbucket.io/development_tsdz2/Various--2018.04.18_-_original_firmware_and_debug_session_using_OpenOCD.html"},"on Linux you can use\nstm8flash"),"."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/OpenSource-EBike-firmware/Color_LCD/releases"},"Download the firmware hex file from\nhere"),".\nPick the file with name TSDZ2_xxxxxxx.hex."),(0,a.kt)("li",{parentName:"ol"},"Flash the firmware (Program Memory tab) with the motor controller\npowered on. Select the proper processor type, both the TSDZ2\ncontroller and the LCD3 display use a stm8s105x6 processor.")),(0,a.kt)("p",null,"If flashing does not work, try turning on the display."),(0,a.kt)("p",null,"NOTE: sometimes the microcontroller on the TSDZ2 motor controllers stops\nto working (this can happens when we disconnect the battery or something\nlike that), we can\xb4t program it anymore. The way to recover is by\nprogramming the option bytes to some default value."),(0,a.kt)("h2",{id:"flash_firmware_on_linux"},"Flash firmware on Linux"),(0,a.kt)("p",null,"Both the TSDZ2 and the LCD3 use a stm8s105x6 processor.\\\nNOTE: when running stm8flash and if you are using for instance Linux\nUbuntu, you may need to run it using \\'sudo stm8flash xxx\\' to get the\nstm8flash working."),(0,a.kt)("h3",{id:"installing_stm8flash_on_linux"},"Installing stm8flash on linux"),(0,a.kt)("p",null,"I found that there was no package available to install stm8flash using\nubuntu. Instead I installed stm8flash from source. Do something like the\nfollowing:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"% git clone "),(0,a.kt)("a",{parentName:"p",href:"https://github.com/vdudouyt/stm8flash.git"},(0,a.kt)("inlineCode",{parentName:"a"},"https://github.com/vdudouyt/stm8flash.git")),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"% cd stm8flash"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"% make"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"% make install"),"\\\nYou should then find that the smt8flash command is available:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"% stm8flash"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"Usage: stm8flash [-c programmer] [-S serialno] [-p partno] [-s memtype] [-b bytes] [-r|-w|-v] ``<filename>"),"{=html}",(0,a.kt)("inlineCode",{parentName:"p"},"..."),"\\"),(0,a.kt)("h3",{id:"backup_existing_firmware"},"Backup existing firmware"),(0,a.kt)("p",null,"First backup everything (just to be sure):\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"stm8flash -c stlinkv2 -p stm8s105?6 -s opt -r TSDZ_orig_opt.bin"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"stm8flash -c stlinkv2 -p stm8s105?6 -r TSDZ_orig.bin"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"stm8flash -c stlinkv2 -p stm8s105?6 -s eeprom -r TSDZ_orig_eeprom.bin"),"\\\nErase protection:\\\n",(0,a.kt)("inlineCode",{parentName:"p"},'echo "00 00 ff 20 df 00 ff 00 ff 00 ff 00 ff 00 ff" | xxd -r -p > option_bytes_pwm_n_channels_enabled.bin'),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"stm8flash -c stlinkv2 -p stm8s105?6 -s opt -w option_bytes_pwm_n_channels_enabled.bin"),"\\"),(0,a.kt)("h3",{id:"flash_firmware"},"Flash firmware"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stm8flash -c stlinkv2 -p stm8s105?6 -w TSDZ2-vxxx.hex"),"\\\nNB: This did not work for me on linux ubuntu (buster/sid). I got the\nfollowing error:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"% stm8flash -c stlinkv2 -p stm8s105?6 -w TSDZ2-v1.1.1.hex"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"Determine FLASH area"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},'Due to its file extension (or lack thereof), "TSDZ2-v1.1.1.hex" is considered as INTEL HEX format!'),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"30555 bytes at 0x8000... Tries exceeded"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"%"),"\\\nI needed to convert the hex formatted file above (",(0,a.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Intel_HEX"},"intel hex\nformat"),") to a binary file with\nthe following command:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"objcopy -I ihex -O binary TSDZ2-vx.y.z.hex TSDZ2-vx.y.z.hex.bin"),"\\\nYou can now take this newly created file (TSDZ2-vx.y.z.hex",(0,a.kt)("strong",{parentName:"p"},".bin"),") and\nuse that to flash the microcontroller instead:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stm8flash -c stlinkv2 -p stm8s105?6 -v TSDZ2-vx.y.z.hex.bin"),"\\"),(0,a.kt)("h3",{id:"restoring_a_backup"},"Restoring a backup"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"\xa0\xa0\xa0#\xa0Erasing\xa0protection"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},'\xa0\xa0\xa0echo\xa0"00\xa000\xa0ff\xa020\xa0df\xa000\xa0ff\xa000\xa0ff\xa000\xa0ff\xa000\xa0ff\xa000\xa0ff"\xa0|\xa0xxd\xa0-r\xa0-p\xa0>\xa0option_bytes_$')),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"\xa0\xa0\xa0#\xa0programming\xa0option\xa0bytes"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"\xa0\xa0\xa0stm8flash\xa0-c\xa0stlinkv2\xa0-p\xa0stm8s105?6\xa0-s\xa0opt\xa0-w\xa0TSDZ_orig_opt.bin")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"\xa0\xa0\xa0#\xa0programming\xa0eeprom"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"\xa0\xa0\xa0stm8flash\xa0-c\xa0stlinkv2\xa0-p\xa0stm8s105?6\xa0-s\xa0eeprom\xa0-w\xa0TSDZ_orig_eeprom.bin")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"\xa0\xa0\xa0#\xa0Programming\xa0firmware"),"\\\n",(0,a.kt)("inlineCode",{parentName:"p"},"\xa0\xa0\xa0stm8flash\xa0-c\xa0stlinkv2\xa0-p\xa0stm8s105?6\xa0-w\xa0TSDZ_orig.bin")),(0,a.kt)("h3",{id:"troubleshooting"},"Troubleshooting"),(0,a.kt)("h4",{id:"swim_error_0x05"},"SWIM error 0x05"),(0,a.kt)("p",null,"Make sure you have the SWIM_RST (reset) pin connected between controller\nand STLINKv2."),(0,a.kt)("h4",{id:"swim_error_0x04"},"SWIM error 0x04"),(0,a.kt)("p",null,"Check the connection between controller and STLINKv2. A cable might be\nloose or have bad connection."))}u.isMDXComponent=!0}}]);