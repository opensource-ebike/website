"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8925],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),h=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=h(e.components);return o.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=h(n),m=a,d=p["".concat(l,".").concat(m)]||p[m]||c[m]||r;return n?o.createElement(d,i(i({ref:t},u),{},{components:n})):o.createElement(d,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var h=2;h<r;h++)i[h]=n[h];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},74650:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return h},toc:function(){return c}});var o=n(83117),a=n(80102),r=(n(67294),n(3905)),i=["components"],s={},l="TSDZ2 Firmware Updating & Open Source firmware",h={unversionedId:"tsdz2/Tutorial-BETA",id:"tsdz2/Tutorial-BETA",title:"TSDZ2 Firmware Updating & Open Source firmware",description:"tsdz2firmwareupdatingopensource_firmware}",source:"@site/docs/tsdz2/Tutorial-BETA.md",sourceDirName:"tsdz2",slug:"/tsdz2/Tutorial-BETA",permalink:"/docs/tsdz2/Tutorial-BETA",draft:!1,editUrl:"https://github.com/OpenSourceEBike/OpenSourceEBike.github.io/tree/master/docs/tsdz2/Tutorial-BETA.md",tags:[],version:"current",frontMatter:{},sidebar:"tsdz2Sidebar",previous:{title:"TSZD2-Hardware-Information",permalink:"/docs/tsdz2/TSZD2-Hardware-Information"},next:{title:"Why-should-you-use-the-Flexible-OpenSource-firmware-on-your-TSDZ2",permalink:"/docs/tsdz2/Why-should-you-use-the-Flexible-OpenSource-firmware-on-your-TSDZ2"}},u={},c=[{value:"TSDZ2 Motor Controller Hardware",id:"tsdz2_motor_controller_hardware",level:2},{value:"Different Motors in the TSDZ2",id:"different_motors_in_the_tsdz2",level:2},{value:"Difference between stock and open source firmware",id:"difference_between_stock_and_open_source_firmware",level:2},{value:"Mechanical Issues",id:"mechanical_issues",level:2},{value:"Updating Stock Firmware",id:"updating_stock_firmware",level:2},{value:"TSDZ2 Open Source Firmware Installation Using KT-LCD3 display",id:"tsdz2_open_source_firmware_installation_using_kt_lcd3_display",level:2},{value:"6-pin &amp; 8-pin TSDZ2",id:"pin_8_pin_tsdz2",level:2}],p={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"tsdz2_firmware_updating_open_source_firmware"},"TSDZ2 Firmware Updating & Open Source firmware"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Written by Tomtom50")),(0,r.kt)("h2",{id:"tsdz2_motor_controller_hardware"},"TSDZ2 Motor Controller Hardware"),(0,r.kt)("p",null,"There are only two hardware versions of the TSDZ2 motor controller, a\nversion with a 6-pin connector to the display with no throttle and an\n8-pin connector version where the throttle can be connected to the\ndisplay. Voltage (36 V, 48 V, 52 V) does not change the hardware,\ninstead the firmware is different and usually locked to different\nvoltages. Stock firmware can be changed to open source firmware so as to\nunlock and setup different voltages."),(0,r.kt)("h2",{id:"different_motors_in_the_tsdz2"},"Different Motors in the TSDZ2"),(0,r.kt)("p",null,"There are two TSDZ2 motors, one spins 4000 RPM no-load at 36 V, the\nother spins 4000 RPM no-load at 48 V. If you buy a 52 V system you are\ngetting the 48 V motor, and it will spin 52/48 x 4000 = 4333 RPM at 52\nV. The brushless DC motors on ebikes are all like this. As they spin\nfaster they produce \\'backwards emf\\' and the backwards emf\nautomatically limits how much current the motor draws from the\ncontroller. At a certain RPM the motor makes so much back emf it spins\nbut makes no torque, this is the no-load RPM. This is why your TSDZ2\ngives less assist as your pedal cadence rises to 80 RPM or so. There are\nways to get around this but that is beyond the scope of this document."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"If you have a 36 V system and you flash to 48 V or 52 V it will run.\nThe motor will spin faster. This can be good if you want assist at a\nhigher pedal cadence. Eco-ebikes sells systems set up this way, they\ncall it overdrive. You can make a 36 V system work this way by\nflashing the firmware to 48 V/52 V and using a 48 V/52 V battery."),(0,r.kt)("li",{parentName:"ul"},"If you have a 48 V/52 V system and you flash to 36 V it will run.\nThe motor spins slower. This can be good if you have a slow pedal\ncadence, although it does not get discussed much.")),(0,r.kt)("p",null,"The motor controller has an STM embedded processor. The processor runs a\nprogram called firmware that is stored in non-volatile memory. You can\nchange the motor firmware if you establish communication between a PC\nand the motor controller using an STM V-link-2 USB adapter and a cable\nyou make. To use open source firmware and the KT-LCD3 display you also\nneed to connect to the KT-LCD3 display, which has its own STM embedded\nprocessor, using a second cable you need to make. The open source\nfirmware is in two files, firmware for the motor controller and firmware\nfor the KT-LCD3 display. Other options exist, but I am not covering them\nhere: \u2022 You can use the open source firmware with the standard TSDZ2\ndisplay. You change firmware settings from a computer utility, not using\nthe KT-LCD3 display. This is good if you want to avoid buying a\ndedicated display, making a special cable, etc. Because the stock\ndisplays have fewer fields they cannot display all of the information\navailable on the KT-LCD3. Search user marcoq at endless-sphere. \u2022\nfeketehegyi at endless sphere has figured out how to change settings in\nthe stock firmware with bluetooth connection for a mobile phone, so you\ncan ride with no display at all. \u2022 casainho, developer of the open\nsource firmware, if working out using the Bafang 850C display. This\ndisplay is color and pixel-based like a cell phone screen. This is only\nin development, not yet released. The Bafang display has a different\nconnector than the KT-LCD3. Flashing the stock firmware is easier than\ngoing to the open source firmware. You make one cable, you establish\nconnection between your PC and the motor controller, you write a\ndifferent firmware file, and you are done. If your main goal is to match\nyour system to a different battery voltage it might not be worth it do\ngo to open source firmware. I personally think the stock firmware is\npretty good, the open source firmware is probably not worth the trouble\nfor everyone, although I\\'m glad I did it."),(0,r.kt)("h2",{id:"difference_between_stock_and_open_source_firmware"},"Difference between stock and open source firmware"),(0,r.kt)("p",null,"My experience is that the system does not feel that much different, but\nthe open source firmware gives far more configuration options, and the\nKT-LCD3 displays far more information. The biggest difference in terms\nof assist is assists level. With the open source firmware I can set\nassist lower than stock level 1 and higher than stock level 4. Combined\nwith up to 9 assist levels you have a lot more control over assist. The\nopen source firmware is developed and modified by volunteers. I think it\nis very smooth for a volunteer effort, but you get no guarantee that it\nwon\\'t have bugs or omissions. Since it does not have a formal testing\nprogram having your brakes connected is something to consider. I did not\nbother to connect the brakes when I used the stock firmware, with the\ntorque sensor there was no need for the way I ride. But I connected the\nbrakes for the open source and I\\'m glad I did. With the open source\nfirmware sometimes when I am at a stop with a foot on a pedal it can\ngive little lurches. This never happened with stock firmware (yes, I\nhave assist without pedal rotation disabled). I personally want to be\nable to kill the motor by grabbing the brake in case there is a glitch\nin the firmware programming. Going to open source means you are not\nusing the system the way Tongsheng recommends. You take on risk that the\nmotor might misbehave, you take on risk you might damage the hardware."),(0,r.kt)("h2",{id:"mechanical_issues"},"Mechanical Issues"),(0,r.kt)("p",null,"This document is not primarily about the mechanical side, but I will\ncover a couple main points since I am aiming at people who do not know a\nlot about the system and may not yet have bought a TSDZ2. I am a\nmechanical engineer, and in my opinion the TSDZ2 is well-engineered and\nmanufactured, especially considering its price. But compromises were\nnecessarily made."),(0,r.kt)("p",null,"Mid-drive kits are designed to fit typical bike frame, which has a\nbottom bracket that carries the crankset axle. 68mm bottom brackets are\nmost common and typical of road bikes. 73mm is also common and shows up\nmore on mountain bikes. Chainline is the distance of the chainwheel to\nthe center of the bike frame, Chainline varies, 45mm is common on road\nbikes, 50mm on many mountain bikes. Ideally the chainline is right in\nthe center of the rear cluster, so the chain doesn\\'t take too much of\nan angle as you change gears with the rear derailleur. This becomes more\ncritical with more rear cogs, because as cogs were added the clusters\ngot wider, increasing the angle, and the cogs and chain got smaller and\nless robust. So a chainline that works OK with a 7-speed rear cluster\nmight cause problems with 10 cogs. There are a lot of hits if you search\nchainline in\n",(0,r.kt)("a",{parentName:"p",href:"https://endless-sphere.com/forums/viewtopic.php?f=28&t=79788"},"https://endless-sphere.com/forums/viewtopic.php?f=28&t=79788")," Mid-drive\nkits have gears that fit between the right crank and the bottom bracket\nthat transmit the motor power, and those gears need thickness to be\nstrong, so it is tough to keep chainline small. Larger chainlines cause\nworst misalignment in first gear. If first gear is important because you\nclimb a lot of hills you might be combining a lot of heavy use with a\nchain that is pretty badly aligned. The TSDZ2 manages a 50mm chainline\n(not great, not bad), but compromises were made to get there: \u2022 The back\nof the gear shroud is dished because most frames have space and the dish\nreduces chainline. But some frames (carbon, mountain bike frames where\nthe rear stays splay quickly aft of the bottom bracket) interfere. Using\na spacer at the bottom bracket increases chainline. \u2022 The standard 42\ntooth TSDZ2 chainring is dished to reduce chainline. This is effective\nand a good solution, but it has limitations: o It limits you to a single\nchainwheel (no front derailleur). You can mount two chainwheels, but the\nchainline is worse on the inner and worse still on the outer chainring.\nFortunately an ebike generally doesn\\'t need such a wide gear range. I\nlive with a lot of hills and a 11T-36T rear cluster has worked out\nreally well. o A chain ring smaller than 42T can\\'t be dished, the gear\ncase would interfere. This can be a problem for mountain bikers who need\na really low range. The TSDZ2 reacts torque by clamping the rear stays\naft of the bottom bracket. This is often not possible with bikes that\nhave a rear suspension, various people have come up with various\nsolutions that require some fabrication. The clamp also can block rear\nderailleur cable routing, I had to grind clearance to keep the\nderailleur cable free. There are a lot posts about the plastic motor\ndrive gear, which fails for some people and not for others. A bronze\ngear is available which is stronger but increases noise. My belief is\nthat the plastic gear is fine if you take care to avoid a few practices\nthat especially load the gear: \u2022 Avoid high-assist startups in a high\ngear. Motor torque is highest at low rpm, and a torque that is OK at\nspeed can damage a gear at low rpm. Develop a habit of shifting to a low\ngear when coming to a stop so you are in low gear when you next take\noff. If you forget reduce assist for launch. \u2022 500W is definitely easier\non the system than 750W. The open source firmware lets you change power\nreally easily."),(0,r.kt)("h2",{id:"updating_stock_firmware"},"Updating Stock Firmware"),(0,r.kt)("p",null,"Eyebyesickle sells from eco-ebikes.com, and at that website there is\ngood instructions about how to: 1. Make a cable to connect your computer\nto the TSDZ2 motor 2. How to use the STM V-Link 2 and software on your\ncomputer 3. How to flash stock firmware 4. Stock firmware files.\n",(0,r.kt)("a",{parentName:"p",href:"https://www.eco-ebike.com/blogs/eco-cycles-instructionals/tsdz2programmingfromscratch"},"https://www.eco-ebike.com/blogs/eco-cycles-instructionals/tsdz2programmingfromscratch")),(0,r.kt)("p",null,"The instructions tell you how to edit voltage levels to adapt to a\ndifferent battery voltage, but that doesn\\'t always work (it didn\\'t for\nme). What worked for me was replacing the entire firmware with a stock\nversion for a different voltage. He made a video to help to flash the\nentire firmware ",(0,r.kt)("a",{parentName:"p",href:"https://www.eco-ebike.com/pages/videos"},"https://www.eco-ebike.com/pages/videos")," FIXING FAULTY\n52V TSDZ2 PROGRAMMING FROM OTHER DISTRIBUTORS He uses an STM brand STM\nV-Link 2 USB adapter. I bought that type because it was in the\ninstructional. Its voltage output is 3.3V where the cheap generic units\nsource 5V. Both work, but if you plan to flash the KT-LCD3 display the\n3.3V means the display is very very dim, you can barely see it."),(0,r.kt)("h2",{id:"tsdz2_open_source_firmware_installation_using_kt_lcd3_display"},"TSDZ2 Open Source Firmware Installation Using KT-LCD3 display"),(0,r.kt)("p",null,"User Jbalat has great videos on youtube. You can see every step when\nusing the STM software.\\\n\\\nPart 1 ",(0,r.kt)("a",{parentName:"p",href:"https://youtu.be/nj8GxKHut3o"},"https://youtu.be/nj8GxKHut3o"),"\\\n\\\nPart 2 ",(0,r.kt)("a",{parentName:"p",href:"https://youtu.be/bxEHDFCaKH8"},"https://youtu.be/bxEHDFCaKH8"),"\\\n\\\nPart 3 ",(0,r.kt)("a",{parentName:"p",href:"https://youtu.be/zChf_2K8rW8"},"https://youtu.be/zChf_2K8rW8"),"\\\n\\\nPart 4 ",(0,r.kt)("a",{parentName:"p",href:"https://youtu.be/0nXtaJniZQc"},"https://youtu.be/0nXtaJniZQc"),"\\\n\\\nPart 5 ",(0,r.kt)("a",{parentName:"p",href:"https://youtu.be/IrWn6e8bIuQ"},"https://youtu.be/IrWn6e8bIuQ")),(0,r.kt)("h2",{id:"pin_8_pin_tsdz2"},"6-pin & 8-pin TSDZ2"),(0,r.kt)("p",null,"For installing the open source software the biggest hardware impact will\nbe whether you have 6-pin (no throttle) or 8-pin:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"They have different motor connectors so the stock cable from the\ndisplay to the motor is different, and the cable you need to make is\nalso different."),(0,r.kt)("li",{parentName:"ul"},"Adding a temperature sensor uses the throttle connection")),(0,r.kt)("p",null,"SHOPPING LIST: 1. KT-LCD3 display casainho had a prior open source\nfirmware project for KT controllers. He already know teh KT-LDC3\ndisplay, he knew it also uses an STM processor, and he knew it has a lot\nof fields to display information. He is working on open source firmware\nfor the Bafang 850C display, but for now the KT-LCD3 is the supported\ndisplay This display is currently a monochrome display, Kunteng KT-LCD3.\nNot all KT-LCD3 displays have the same connector. Some have a green\n5-pin waterproof (Julet) connector, but not all. For example the KT-LCD3\nfrom BMS Battery has a connector that matches their controllers. I\nrecommend buying a KT-LCD3 that has the 5-pin waterproof connector and a\nmating extension cable. 2. ST-Link v2 In order to be able to flash the\ndisplay and the controller of the motor you will need a small USB device\ncalled ST-Link v2, clones are cheap, the STM brand unit is more\nexpensive and sources 5V rather than 3.3V (5V is preferred). 3. ST-Link\nvisual programmer\n",(0,r.kt)("a",{parentName:"p",href:"https://www.eco-ebike.com/blogs/eco-cycles-instructionals/tsdz2programmingfromscratch"},"https://www.eco-ebike.com/blogs/eco-cycles-instructionals/tsdz2programmingfromscratch"),"\ntells you how to get the STM program. 4. Cable for flashing motor I\nfollowed the instruction in\n",(0,r.kt)("a",{parentName:"p",href:"https://www.eco-ebike.com/blogs/eco-cycles-instructionals/tsdz2programmingfromscratch"},"https://www.eco-ebike.com/blogs/eco-cycles-instructionals/tsdz2programmingfromscratch"),"\nPeople have reported that long cables can cause communications faults."),(0,r.kt)("p",null,"Also see\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Flash-the-firmware-on-TSDZ2"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Flash-the-firmware-on-TSDZ2")),(0,r.kt)("p",null,"5","."," Cable for flashing KT-LCD3 & JST-XH-4-pin connectors\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/How-to-flash-the-Flexible-OpenSource-firmware-on-KT-LCD3"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/How-to-flash-the-Flexible-OpenSource-firmware-on-KT-LCD3")),(0,r.kt)("p",null,"jbalat in his video found he had to swap rx and tx to make his cable\nwork. Mine worked straight away but I have seen that RX and TX\nassignments can vary with the generic STM adapters."),(0,r.kt)("p",null,"The KT-LCD3 is programmed by connecting to four empty (marked J7) holes\non the board. Access to the holes on the KT-LCD3 PCB requires opening\nthe case. If you make no modification you will need to open the case\nevery time you want to update. I recommend connectorizing the display\nwith a JST-XH 4-pin connector soldered to the back of the circuit board.\n(JST XH is the connector used for RC lithium battery balancer\nconnections, the pins fit perfectly on the PC board). The JDT-XH\nconnector solders in and fits nicely after a clearance hole is cut in\nthe back of the KT-LCD3 case. Seal with hot glue or silicone.\n",(0,r.kt)("a",{parentName:"p",href:"https://endless-sphere.com/forums/viewtopic.php?f=28&t=79788&p=1434902%23p1434902#p1434902"},"https://endless-sphere.com/forums/viewtopic.php?f=28&t=79788&p=1434902%23p1434902#p1434902"),"\n6. Cable for connecting KT-LCD3 to TSDZ2 motor (and throttle and brake\nsensors). I did 8-pin, both 6-pin and 8-pin are covered in\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Wire-KT-LCD3-to-TSDZ2"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Wire-KT-LCD3-to-TSDZ2"),"\nThe github link involves buying the connector + cable that connects to\nthe KSDZ2 motor and splicing to the KT-LCD3 cable brake and throttle\nconnections aren\\'t covered in detail. I recommend starting with a\nmolded cable that has waterproof connectors for KT-LCD3, throttle, and\nbrakes and splicing to the motor + cable with a single splice. That\napproach directly accepts the KT-LCD3 green 5-pin connector (see above,\nsome KT-LCD3 are sold that don\\'t have the waterproof connector), and\nwaterproof connections for brakes and throttle are ready for use.\n",(0,r.kt)("a",{parentName:"p",href:"https://endless-sphere.com/forums/viewtopic.php?f=28&t=79788&p=1430679#p1430679"},"https://endless-sphere.com/forums/viewtopic.php?f=28&t=79788&p=1430679#p1430679"),"\nTopbikekit sells the 1 in 4 cable used, they also sell throttles and\nbrake levers with matching molded connectors:\n",(0,r.kt)("a",{parentName:"p",href:"http://www.topbikekit.com/wuxing-brake-with-2pins-waterproof-connector-p-543.html"},"http://www.topbikekit.com/wuxing-brake-with-2pins-waterproof-connector-p-543.html"),"\n",(0,r.kt)("a",{parentName:"p",href:"http://www.topbikekit.com/2pcs-ebike-hydraulic-brake-sensor-for-power-cut-off-with-2pins-junlei-waterproof-connector-p-697.html"},"http://www.topbikekit.com/2pcs-ebike-hydraulic-brake-sensor-for-power-cut-off-with-2pins-junlei-waterproof-connector-p-697.html"),"\n",(0,r.kt)("a",{parentName:"p",href:"http://www.topbikekit.com/wuxing-108x-thumb-throttle-with-3pins-waterproof-connector-for-ebike-p-670.html"},"http://www.topbikekit.com/wuxing-108x-thumb-throttle-with-3pins-waterproof-connector-for-ebike-p-670.html"),"\n",(0,r.kt)("a",{parentName:"p",href:"http://www.topbikekit.com/wuxing-130x-thumb-throttle-with-3pins-waterproof-connector-p-542.html"},"http://www.topbikekit.com/wuxing-130x-thumb-throttle-with-3pins-waterproof-connector-p-542.html"),"\nFLASHING THE KT-LCD3: The procedure is at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/How-to-flash-the-Flexible-OpenSource-firmware-on-KT-LCD3"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/How-to-flash-the-Flexible-OpenSource-firmware-on-KT-LCD3"),"\nThe procedure uses jbalat\\'s TSDZ2 OPENSOURCE FIRMWARE ","|"," PART 2 video\nwhich shows all steps, but watch closely! I had to pause and rewind a\nfew times to catch it all. Some main points: \u2022 5V to J7 on KT-LCD3 (STM\nbrand V-Link 2 sources only 3.3V. It works but you can barely see\ndisplay) . Disconnect battery. \u2022 Settings for configuring the KT-LCD3\nare (CONFIGURE menu) o Hardware: ST-LINK o Port: USB o Programming mode:\nSWIM o Device: STM8S105x6 \u2022 Erase the original firmware, which is\nlocked. After you clear the firmware the KT-LCD3 is completely\nunprogrammed o Read all tabs (will say device is locked) o Select Option\nbyte tab o Read Out Protection Off o Flash to current tab \u2022 Flash Open\nSource Firmware o Unplug and re-plug ST-Link (Screen will be blank) o\nRead all tabs o Select Program Memory Tab o File","\\","open the KT-LCD3\nfirmware hex file o Program All Tabs o Unplug and re-plug ST-Link twice\nREAD AND SAVE THE EXISTING TSDZ2 MOTOR FIRMWARE The procedure is at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Flash-the-firmware-on-TSDZ2"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Flash-the-firmware-on-TSDZ2"),"\njbalat\\'s TSDZ2 OPENSOURCE FIRMWARE ","|"," PART 3 video. Some main points: \u2022\nBattery disconnected \u2022 You can do this step with the original LCD\ndisplay connected but not powered up. The ST-Link gives enough power to\nflash the motor. \u2022 You will first read the existing firmware. This\nensures you have a working connection. Eco-ebike.com also has good\ninstructions to get the connection up and running. \u2022 Save the existing\nfirmware so you have a backup in case you want to go back to stock. \u2022\nSettings for configuring the KT-LCD3 are in the CONFIGURE menu o\nHardware: ST-LINK o Port: USB o Programming mode: SWIM o Device:\nSTM8S105x4 (per jbalat video this is the only time to use the X4 device.\nFlashing Opensource firmware uses X6 same s KT-LCD3) FLASH THE TSDZ2\nMOTOR OPEN SOURCE FIRMWARE The procedure is at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Flash-the-firmware-on-TSDZ2"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Flash-the-firmware-on-TSDZ2"),"\njbalat\\'s TSDZ2 OPENSOURCE FIRMWARE ","|"," PART 4 video. Some main points: \u2022\nBattery disconnected \u2022 Connect the flashed KT-LCD3 to the motor \u2022 Use\nthe same ST-Link connection \u2022 Settings for configuring the KT-LCD3 are\nin the CONFIGURE menu o Hardware: ST-LINK o Port: USB o Programming\nmode: SWIM o Device: STM8S105x6. \u2022 Flash Firmware o Unplug and re-plug\nST-Link (Screen will be blank) o Read all tabs o Select Program Memory\nTab o File","\\","open the TSDZ2 firmware hex file o Program All Tabs\nCONFIGURE THE SYSTEM The KT-LCD3 is used to configure the system. The\nprocedure is at\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Usage-and-configuration-of-firmware-version-0.17.x"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Usage-and-configuration-of-firmware-version-0.17.x"),"\njbalat\\'s TSDZ2 OPENSOURCE FIRMWARE ","|"," PART 5 video. \u2022 Motor maximum\npower screen o Access by simultaneously pressing ON/OFF and UP buttons o\nUP and DOWN buttons increase/decrease the value o Exit by long pressing\nthe ON/OFF button. \u2022 Configuration Menu o Access by long pressing UP and\nDOWN buttons. o On/off advances menus o UP or DOWN button enters menu o\nOn/off advances sub-menus o UP or DOWN button changes values o Exit menu\nby long pressing the ON/OFF button o Exit to main screen by long\npressing the ON/OFF button once again The table below is from the github\nsite for v 0.17. I thin it is nice to have a log of the default settings\nand what you pout in (Setting column). I added some comments of my own.\n0: General Setup Submenu number Configuration name Default value Setting\nDescription 0 Unit Metric Set (0) for metric units (km/h and kilometers)\nor (1) for imperial units (mph and miles) 1 Maximum wheel speed 50 Enter\nyour speed limit (by law) to run legal on public roads. The motor will\nfade out from -0.5 km/h to +2,0 km/h. Tip: Europe has generally a speed\nlimit of 25 km/h for E-Bikes. 2 Wheel circumference 2050 Enter your\nwheel circumference so that speed and distance is correctly calculated."),(0,r.kt)("p",null,"Tip: Search on Google how to measure wheel circumference. But for a\nquick setup with ball park values use: 26 wheel = 2050; 27 wheel = 2150;\n27.5 wheel =2215; 28 wheel = 2250; 29 wheel = 2300 1: Battery Submenu\nnumber Configuration name Default value Setting Description 0 Maximum\ncurrent from battery 16 ampere Set maximum allowable current to be\npulled from the battery. This value is limited internally by the\nfirmware to the safe value of 18 ampere. 1 Battery low-cut-off voltage\n39 volt The controller will reduce power to stay over this limit!\nCalculate the limit by multiplying amount of cells in series with the\nsafe cut-off-voltage per cell, which is usually between 2.8 - 3.0 volts.\nExample: 39.0 volts for: 13 cells in series ","*"," 3.0 volts = 39.0 volts. 2\nNumber of cells in series 13 Set this value so the battery state\nindicator works properly. This value can be any integer from 7 to 14"),(0,r.kt)("p",null,"Example values: 7 for 24 V battery; 10 for 36 V battery; 13 for 48 V\nbattery; 14 for 52 V battery. 3 Battery internal resistance 130\nmilliohms Set this value so the battery state indicator does not display\na lower state of charge when pulling a lot of power from battery and the\nvoltage sags."),(0,r.kt)("p",null,"Explanation: If you set the value to 0, you will see the battery state\nindicator fluctuating whenever the motor draws current from the battery.\nThis is due to the internal resistance in the battery. The fluctuation\nwill disappear and be filtered out with a correct value."),(0,r.kt)("p",null,"How to calculate the battery pack resistance: 1. Limit the battery\ncurrent to a known value, e.g. 10 amps 2. Read the voltage drop when\nmotor is pulling the 10 amps 3. Calculate the resistance value"),(0,r.kt)("p",null,"Example for 10 amps current, R = U / I, R = 1.2 volts drop / 10 amps, R\n= 0.120 = 120 milliohms. I found 300 was a good setting for my 52V\n12.8Ah battery. 4 Battery voltage (SOC) - Measured and continuously\nupdated battery voltage State Of Charge (SOC). This value is filtered\nusing the battery pack resistance."),(0,r.kt)("p",null,"Tip: Here you can evaluate and test how the set internal resistance of\nthe battery affects the voltage reading. 2: Battery Capacity Setup\nSubmenu number Configuration name Default value Setting Description 0\nEnable and set State of Charge function 0 Set (1) to enable function. It\nwill display watt-hours consumed and percentage of charge remaining,\ni.e., display percentage value from 100 % to 0 %."),(0,r.kt)("p",null,"Set (2) to enable function. It will display watt-hours consumed and\npercentage of charge consumed, i.e., display percentage value from 0 %\nto 100 %."),(0,r.kt)("p",null,"Set (0) to disable the function. 1 Threshold voltage to reset watt-hour\nmeter 54.2 volt When powering on the display this value is compared to\nthe battery voltage. If it is lower, the battery is expected to be fully\ncharged and the watt-hour meter is reset."),(0,r.kt)("p",null,"Tip: To find a suitable value, fully charge the battery and measure the\nvoltage on the KT-LCD3, use a slightly lower value for the threshold\nvoltage."),(0,r.kt)("p",null,"Example: my 48 V battery charges up to 54.6 volts, so I set the\nthreshold to 54.2 volts. 2 Total watt-hours of battery 0 Set the total\ncapacity in watt-hours your battery has."),(0,r.kt)("p",null,"Tip: fully charge the battery and then discharge it completely and use\nthe measured value to input here."),(0,r.kt)("p",null,"Tip: the capacities stated from suppliers are often too high, expect a\nvalue of around 80 % - 90 % of stated value. I use 350 Wh for my 386 Wh\nbattery."),(0,r.kt)("p",null,"Tip: roughly calculate the capacity by multiplying the nominal voltage\nwith the nominal ampere hours. Example: a 48 volt, 14.5 Ah battery has a\nnominal watt-hour capacity of 696 Wh. 3 Consumed watt-hours - This value\nrepresents consumed watt-hours since last reset. It is reset\nautomatically when you power on the LCD and the battery is fully\ncharged, i.e., above the set threshold voltage. 3: Assist Levels Submenu\nnumber Configuration name Default value Setting Description 0 Number of\nassist levels 5 default Select the desired number of assist levels from\na minimum of 1 to a maximum of 9. 1 Assist level 1 multiplier 0.5 0.1\n0.2 0.3 0.4 0.5 0.7 0.9 1.2 1.5 The value with which the human pedaling\npower is multiplied with. (default 0.5 1.0 1.5 2.0 2.5)"),(0,r.kt)("p",null,"Example: 0.5 ","*"," 200 W (human power) = 100 W assist power. This results\nin 300 W total power."),(0,r.kt)("p",null,"I found the stock values gave crazy high assist,, o.5 was stronger than\nlevel 4 (turbo) in the stock firmware."),(0,r.kt)("p",null,"Also the human power it tells me I am putting is flattering but way\nhigh. It didn\\'t matter in practice, I just set low multipliers. For me\n0.1 is less assist that stock Eco mode, and 1.5 is more assist than\nTurbo 2 Assist level X multiplier 0.5 inc The desired multiplier for\nassist level X. 4: Startup BOOST function Submenu number Configuration\nname Default value Setting Description 0 BOOST feature 0 Set (1) to\nenable or (0) to disable. I get occasional motor lurches when I\\'m at a\nstop with my foot on a pedal even though this is disabled. 1 On startup\nonly / everytime 1 Set (1) to enable BOOST feature every time pedal\ncadence or torque sensor value are zero. Set (0) to enable BOOST feature\nonly when startup and bicycle wheel speed is equal to zero; 2 Limit\nBOOST power to max battery power 0 Set (1) to enable BOOST power limit\nto the maximum battery power value. Set (0) to disable. 3 BOOST time 2.0\nseconds Set time limit of BOOST. 4 Fade out BOOST 3.5 seconds Set time\nlimit to transition of power from BOOST to regular power. 5 Assist level\n1 BOOST multiplier 4 Set the BOOST multipler corresponding to assist\nlevel 1."),(0,r.kt)("p",null,"Tip: See assist levels for more information about multipliers. 6 Assist\nlevel X BOOST multiplier - Set the BOOST multipler corresponding to\nassist level X."),(0,r.kt)("p",null,"Tip: See assist levels for more information about multipliers. 5: Motor\nTemperature Protection Submenu number Configuration name Default value\nSetting Description 0 Motor temperature protection 0 Set (1) to enable\nthe motor temperature control or set (0) to disable."),(0,r.kt)("p",null,"NOTE: if you do not have the motor temperature sensor installed, you\nshould disable this option and ignore the immediate configurations\nbelow. 1 Minimum temperature 75 \xb0C Set the minimum motor temperature at\nwhich the motor current will start to be limited. 2 Maximum temperature\n85 \xb0C Set the maximum motor temperature at which the motor current will\nbe completely blocked, i.e., motor shutoff. 6: Display Submenu number\nConfiguration name Default value Setting Description 0 LCD brightness\nwhen backlight is off 5 Percentage of brightness when backlight is\nturned off, e.g., 5 % 1 LCD brightness when backlight is on 80\nPercentage of brightness when backlight is turned on, e.g., 80 % 2 LCD\nauto power off 15 Automatic power off after set amount of minutes. 3\nReset to factory defaults 0 1. 2. Increase the value to 10 3. The\ndisplay will turn off 4. Turn it on again 5. Factory default settings\nwill be restored 7: Offroad Mode Submenu number Configuration name\nDefault value Setting Description 0 Feature toggle 0 Select (1) to\nenable or (0) to disable. 1 Active on system startup 0 Determines\nwhether offroad mode should be active on system startup. Select (1) to\nenable or select (0) to disable. 2 Speed limit 25 km/h This speed limit\nis used when offroad mode is not active. Configure your speed which is\nlegal for using on public roads. The motor will fade out power from -0.5\nkm/h to +2,0 km/h. 3 Limit power 0 Determines whether power should be\nlimited when offroad mode is not active. Select (1) to enable or (0) to\ndisable. 4 Power limit 250 W The power limit in watts. For most\ncountries in Europe the legal power limit is 250 W. 8: Various Submenu\nnumber Configuration name Default value Setting Description 0 Motor\nvoltage type 0 Depending on type of motor, select appropriate value so\nthat FOC calculations are correctly executed. The voltage of the battery\ndoes not matter, this value should always be set depending on type of\nmotor."),(0,r.kt)("p",null,"0 for 48 V brushless motor (TSDZ2 52 V version has a 48 V brushless\nmotor). \u2022 1 for 36 V brushless motor. \u2022 2 for experimental high cadence\nmode (only available in version 0.14.3 and up). Maybe not good for the\nmotor, use at your own risk. Probably only suitable for 36 V motors. 1\nMotor assistance startup without pedal rotation 0 Select (1) to enable\nor select (0) to disable. Recommended to keep at disabled (0) if you do\nnot have brake sensors installed. 2 Set odometer 0 Set the odometer to\npreferred value. Increase the value by pressing UP button or press and\nhold to have the value increment automatically. Decrease the value by\npressing the DOWN button or press and hold to have the value decrement\nautomatically. 9: Advanced Technical Data Submenu number Configuration\nname Description 0 ADC throttle See the current value 1 Throttle See the\ncurrent value 2 ADC pedal torque sensor See the current value 3 Pedal\ntorque sensor See the current value 4 Pedal cadence See the current\nvalue 5 Pedal human power See the current value 6 PWM duty cycle See the\ncurrent value 7 Motor speed in ERPs See the current value 8 FOC angle\nSee the current value. This value must be multiplied by 1.4 to get angle\nvalue in degrees. Other links\n",(0,r.kt)("a",{parentName:"p",href:"https://endless-sphere.com/forums/viewtopic.php?f=30&t=93818&p=1435526#p1435539"},"https://endless-sphere.com/forums/viewtopic.php?f=30&t=93818&p=1435526#p1435539"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://endless-sphere.com/forums/viewtopic.php?f=30&t=93818&p=1435526#p1435634"},"https://endless-sphere.com/forums/viewtopic.php?f=30&t=93818&p=1435526#p1435634"),"\n",(0,r.kt)("a",{parentName:"p",href:"https://endless-sphere.com/forums/viewtopic.php?f=30&t=93818&p=1435526#p1435736"},"https://endless-sphere.com/forums/viewtopic.php?f=30&t=93818&p=1435526#p1435736")),(0,r.kt)("p",null,"Main screen\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Usage-and-configuration-of-firmware-version-0.17.x"},"https://github.com/OpenSource-EBike-firmware/TSDZ2_wiki/wiki/Usage-and-configuration-of-firmware-version-0.17.x"),"\nI added screenshots to the github info to make this easier to understand\no Assist level: assist level sets the motor power as a factor of the\npower that rider is doing on the pedals. For instance, if current assist\nlevel is 3 and if this level is configured as a factor of 2.0, when\nrider is doing on the pedals a power of 100 watts, the motor power used\nwill then be 200 watts."),(0,r.kt)("p",null,"The assist level is changed by pressing UP and DOWN buttons. o Ebike\nwheel speed: the value of wheel speed in kmh or mph."),(0,r.kt)("p",null,"o Motor power: power used by the motor (in watts) that is being draw\nfrom the battery."),(0,r.kt)("p",null,"o Battery state of charge: Battery state of charge based on battery\nvoltage. There are 6 different levels. When battery is near empty, the\nbattery symbol will be empty and blinking and the motor power will be\nreduced up to battery being totally empty."),(0,r.kt)("p",null,"The battery voltage used to calculate the state of charge has in\nconsideration the battery pack resistance to avoid floating when power\nis being draw from the battery (the battery pack resistance value is set\non configurations menu). o Lights: enabled/disable with a long press of\nUP button (LCD back light will also be change, depending on the\nconfigurations) and the motor controller will enable/disable the ebike\nlights."),(0,r.kt)("p",null,"o Brake: Brake symbol is enabled when user press the ebike brakes (good\nto check that sensor brakes are working)."),(0,r.kt)("p",null,"o Time Measurement: Time measurement functions. Switch between TM or TTM\nto get measured time either from trip or user last reset."),(0,r.kt)("p",null,"o Walk assist: enabled/disable with a long press of DOWN button.\nAlthough it is implemented on LCD, it is not yet implemented on the\nmotor controller."),(0,r.kt)("p",null,"o Offroad mode: if you have enabled the offroad mode (see configuration\nsection below) this can be activated with the ON/OFF and UP button\ncombination and deactivated with the ON/OFF and DOWN button combination.\nWhen active, the assist symbol above the assist level will start\nblinking."),(0,r.kt)("p",null,"Offroad mode is disabled and inactive by default. We do not recommend\nyou to activate offroad mode on public roads. In many countries offroad\nmode may only be used on private property. o Motor temperature / battery\nstate of charge in percentage: this field can show either the motor\ntemperature (when the sensor is installed), the battery state in\npercentage or none (you can switch what is shown by pressing POWER and\nUP buttons simultaneously)."),(0,r.kt)("p",null,"\uf0a7 Motor temperature: motor temperature in degrees Celsius. When the\npower power is being limited due to over temperature, this field will\nblink (configure the temperature limits on configurations menu). \uf0a7\nBattery state of charge in percentage: this percentage value is based on\nthe accumulated battery power draw from your battery pack (set options\non configurations menu). o Odometer field: this field can show a few\nvariables that are logic grouped in sub fields. You can change between\nfields by pressing ON/OFF button and sub fields by quick pressing UP\nbutton followed a long press UP button (you will see temporary the field\nand sub field number blinking on wheel speed field)."),(0,r.kt)("p",null,"\uf0a7 1. Distance \uf0a7 1.0 Trip distance: can be reset by quickly pressing DOWN\nbutton followed by a long press DOWN button (you will see trip distance\nvalue blinking if you keep pressed DOWN button and after 3 seconds the\nvalue will reset). \uf0a7 1.1 Distance since power on this value is\nautomatically reset at power on. You can also reset by quick pressing\nDOWN button followed a long press DOWN button (you will see trip\ndistance value blinking if you keep pressed DOWN button and after 3\nseconds the value will reset). \uf0a7 1.2 Odometer: can be set to a specific\nvalue on the configurations menu. \uf0a7 2. Battery State of Charge (not\nshown if function is disabled in configuration menu) \uf0a7 2.0 State of\ncharge in percentage \uf0a7 2.1 Consumed watt-hours \uf0a7 3. Battery State \uf0a7 3.0\nVoltage: Voltage of battery. \uf0a7 3.1 Current: instantaneous current drawn\nfrom battery. \uf0a7 4. Pedals \uf0a7 4.0 Rider pedal power: in watts. \uf0a7 4.1 Pedal\ncadence: in revolutions per minute. \uf0a7 4.2 Pedal torque: in newton meter.\n\uf0a7 5. Motor Temperature (not shown if function is disabled in\nconfiguration menu) \uf0a7 5.0 Motor temperature: Temperature of motor. \uf0a7 6.\nTime Measurement \uf0a7 6.0 Time Measurement: Time measured since display is\npowered on. \uf0a7 6.1 Total Time Measurement: Total time measured since last\nreset."))}m.isMDXComponent=!0}}]);